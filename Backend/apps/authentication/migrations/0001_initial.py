# Generated by Django 5.2.6 on 2025-10-30 12:51

import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='OTPRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(help_text='Phone number with country code', max_length=128, region=None)),
                ('purpose', models.CharField(choices=[('registration', 'Registration'), ('login', 'Login'), ('password_reset', 'Password Reset'), ('phone_verification', 'Phone Verification')], default='registration', max_length=20)),
                ('status', models.CharField(choices=[('sent', 'Sent'), ('verified', 'Verified'), ('expired', 'Expired'), ('failed', 'Failed')], default='sent', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField()),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('attempt_count', models.PositiveSmallIntegerField(default=0)),
                ('external_reference', models.CharField(blank=True, help_text='External service reference (e.g., Twilio SID)', max_length=100, null=True)),
            ],
            options={
                'db_table': 'auth_otp_requests',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['phone_number', 'purpose'], name='otp_phone_purpose_idx'), models.Index(fields=['phone_number', 'status'], name='otp_phone_status_idx'), models.Index(fields=['created_at'], name='otp_created_idx'), models.Index(fields=['expires_at'], name='otp_expires_idx'), models.Index(fields=['status', 'created_at'], name='otp_status_created_idx')],
                'constraints': [models.CheckConstraint(condition=models.Q(('attempt_count__gte', 0)), name='otp_attempt_count_positive')],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('mobile_number', models.CharField(max_length=15, unique=True)),
                ('password_hash', models.CharField(blank=True, max_length=255, null=True)),
                ('password_salt', models.CharField(blank=True, max_length=255, null=True)),
                ('kyc_id', models.CharField(max_length=50)),
                ('kyc_status', models.CharField(choices=[('PENDING', 'Pending'), ('IN_PROGRESS', 'In Progress'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='PENDING', max_length=20)),
                ('credentials_generated', models.BooleanField(default=False)),
                ('credentials_sent_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('email_verified', models.BooleanField(default=False)),
                ('mobile_verified', models.BooleanField(default=False)),
                ('device_fingerprint', models.CharField(blank=True, max_length=100, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('is_del', models.SmallIntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_id_updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_users', to='authentication.user')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='IssureAuthActivityLog',
            fields=[
                ('log_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('activity_type', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('device_fingerprint', models.CharField(blank=True, max_length=100, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('session_id', models.CharField(blank=True, max_length=100, null=True)),
                ('severity', models.CharField(choices=[('INFO', 'Info'), ('WARNING', 'Warning'), ('ERROR', 'Error'), ('HIGH', 'High Risk')], default='INFO', max_length=20)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('related_table', models.CharField(blank=True, max_length=50, null=True)),
                ('related_record_id', models.BigIntegerField(blank=True, null=True)),
                ('is_del', models.SmallIntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentication.user')),
                ('user_id_updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_logs', to='authentication.user')),
            ],
        ),
        migrations.CreateModel(
            name='OTPAttempt',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_successful', models.BooleanField(default=False)),
                ('attempted_at', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('otp_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='authentication.otprequest')),
            ],
            options={
                'db_table': 'auth_otp_attempts',
                'ordering': ['-attempted_at'],
                'indexes': [models.Index(fields=['otp_request', 'attempted_at'], name='otp_attempt_request_time_idx'), models.Index(fields=['attempted_at'], name='otp_attempt_time_idx'), models.Index(fields=['is_successful'], name='otp_attempt_success_idx')],
            },
        ),
        migrations.CreateModel(
            name='Otp',
            fields=[
                ('otp_id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('otp_code', models.CharField(max_length=6)),
                ('otp_type', models.CharField(choices=[('SMS', 'SMS'), ('EMAIL', 'Email')], max_length=10)),
                ('expiry_time', models.DateTimeField()),
                ('is_used', models.BooleanField(default=False)),
                ('is_del', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='otps', to='authentication.user')),
                ('user_id_updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_otps', to='authentication.user')),
            ],
            options={
                'verbose_name': 'OTP',
                'verbose_name_plural': 'OTPs',
                'db_table': 'otp',
                'indexes': [models.Index(fields=['user', 'otp_type', 'is_used'], name='otp_user_id_40fb2a_idx')],
            },
        ),
    ]
