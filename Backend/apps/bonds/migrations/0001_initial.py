# Generated by Django 5.2.6 on 2025-10-04 06:27

import datetime
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ISINBasicInfo',
            fields=[
                ('isin_code', models.CharField(max_length=12, primary_key=True, serialize=False)),
                ('security_type', models.CharField(blank=True, max_length=100, null=True)),
                ('isin_description', models.TextField(blank=True, null=True)),
                ('issue_description', models.TextField(blank=True, null=True)),
                ('coupon_rate_percent', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('maturity_date', models.DateField(blank=True, null=True)),
                ('ytm_percent', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('face_value_rs', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('issuer_name', models.CharField(blank=True, max_length=255, null=True)),
                ('issuer_type', models.CharField(blank=True, choices=[('CENTRAL_GOV', 'Central Government'), ('STATE_GOV', 'State Government'), ('PSU', 'Public Sector Undertaking'), ('SLU', 'State Level Undertaking'), ('CORPORATE', 'Corporate / Non-PSU'), ('BANK', 'Bank / NBFC'), ('MUNICIPAL', 'Municipal Bonds')], max_length=20, null=True)),
                ('issue_size_lakhs', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('issue_date', models.DateField(blank=True, null=True)),
                ('isin_active', models.BooleanField(default=True, help_text='Check if the ISIN is active', verbose_name='ISIN Active?')),
                ('listed_unlisted', models.CharField(blank=True, help_text='Listed or Unlisted status', max_length=50, null=True)),
                ('trading_status', models.CharField(blank=True, choices=[('ACTIVE', 'Active'), ('SUSPENDED', 'Suspended'), ('DELISTED', 'Delisted'), ('MATURED', 'Matured')], help_text='Active/Suspended/Delisted status', max_length=100, null=True)),
                ('tax_category', models.CharField(blank=True, choices=[('TAX_FREE', 'Tax Free'), ('TAXABLE', 'Taxable'), ('PARTIALLY_TAX_FREE', 'Partially Tax Free')], help_text='Tax treatment category', max_length=50, null=True)),
                ('secured', models.BooleanField(default=False, help_text='Whether the bond is secured or unsecured')),
                ('transferable', models.BooleanField(default=True, help_text='Whether the bond is transferable')),
                ('primary_exchange', models.CharField(blank=True, help_text='Primary exchange for trading', max_length=50, null=True)),
                ('former_name', models.CharField(blank=True, max_length=255, null=True)),
                ('minimum_investment_rs', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('interest_payment_frequency_raw', models.TextField(blank=True, null=True)),
                ('interest_payment_frequency', models.CharField(blank=True, max_length=20, null=True)),
                ('percentage_sold', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('mode_of_issuance', models.CharField(blank=True, max_length=100, null=True)),
                ('series', models.CharField(blank=True, help_text='Bond series identifier - stays in basic for identification', max_length=100, null=True)),
                ('tax_free', models.BooleanField(default=False, help_text='True if bond is tax-free, False if taxable')),
                ('option_type', models.CharField(blank=True, choices=[('CALL', 'Callable'), ('PUT', 'Puttable'), ('NONE', 'None')], max_length=20, null=True)),
                ('seniority', models.CharField(blank=True, max_length=255, null=True)),
                ('data_hash', models.CharField(blank=True, max_length=64, null=True)),
                ('record_created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'isin_basic_info',
            },
        ),
        migrations.CreateModel(
            name='ISINCompanyMap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('primary_company', models.BooleanField(default=True, help_text='Is this the primary issuer for this ISIN')),
                ('mapped_on', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'isin_company_map',
            },
        ),
        migrations.CreateModel(
            name='ISINRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating_agency', models.CharField(choices=[('CRISIL', 'CRISIL'), ('ICRA', 'ICRA'), ('CARE', 'CARE Ratings'), ('IND-RA', 'India Ratings & Research'), ('BWR', 'Brickwork Ratings'), ('ACUITE', 'Acuit√© Ratings')], max_length=100)),
                ('credit_rating', models.CharField(choices=[('AAA', 'AAA'), ('AA+', 'AA+'), ('AA', 'AA'), ('AA-', 'AA-'), ('A+', 'A+'), ('A', 'A'), ('A-', 'A-'), ('BBB+', 'BBB+'), ('BBB', 'BBB'), ('BBB-', 'BBB-'), ('BB+', 'BB+'), ('BB', 'BB'), ('BB-', 'BB-'), ('B+', 'B+'), ('B', 'B'), ('B-', 'B-'), ('C', 'C'), ('D', 'Default / D')], max_length=10)),
                ('rating_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'isin_rating',
            },
        ),
        migrations.CreateModel(
            name='ISINRTAMap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effective_from', models.DateField(default=datetime.date.today)),
                ('effective_to', models.DateField(blank=True, null=True)),
                ('mapped_on', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'isin_rta_map',
            },
        ),
        migrations.CreateModel(
            name='KeyFactor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key_factors', models.JSONField(default=list)),
                ('strengths', models.JSONField(default=list)),
                ('weaknesses', models.JSONField(default=list)),
                ('data_hash', models.CharField(blank=True, max_length=64, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'key_factor',
            },
        ),
        migrations.CreateModel(
            name='RatioAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('benchmark', models.CharField(max_length=100)),
                ('assessment', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('data_hash', models.CharField(blank=True, max_length=64, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'ratio_analysis',
            },
        ),
        migrations.CreateModel(
            name='RatioValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('value', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'ratio_value',
            },
        ),
        migrations.CreateModel(
            name='RTAInfo',
            fields=[
                ('rta_id', models.AutoField(primary_key=True, serialize=False)),
                ('rta_name', models.CharField(max_length=255, unique=True)),
                ('rta_bp_id', models.CharField(blank=True, max_length=50, null=True)),
                ('rta_address', models.TextField(blank=True, null=True)),
                ('rta_contact_person', models.CharField(blank=True, max_length=100, null=True)),
                ('rta_phone', models.CharField(blank=True, max_length=255, null=True)),
                ('rta_fax', models.CharField(blank=True, max_length=50, null=True)),
                ('rta_email', models.TextField(blank=True, null=True)),
                ('trustee', models.CharField(blank=True, max_length=255, null=True)),
                ('arrangers', models.TextField(blank=True, null=True)),
                ('im_term_sheet', models.CharField(blank=True, max_length=500, null=True)),
                ('data_hash', models.CharField(blank=True, max_length=64, null=True)),
                ('record_created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'rta_info',
            },
        ),
        migrations.CreateModel(
            name='SnapshotDefinition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_name', models.CharField(help_text="Internal metric name, e.g., 'AUM', 'PAT'", max_length=100)),
                ('display_name', models.CharField(help_text='UI label for the snapshot', max_length=200)),
                ('order', models.PositiveIntegerField(default=0, help_text='Order in the UI snapshot')),
                ('metric_type', models.CharField(choices=[('financial', 'Financial Metric'), ('rating', 'Credit Rating'), ('keyfactor', 'Key Factor / Portfolio Quality')], max_length=20)),
                ('description', models.TextField(blank=True, help_text='Optional description for UI display', null=True)),
            ],
            options={
                'db_table': 'snapshot_definition',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='CompanyInfo',
            fields=[
                ('company_id', models.AutoField(primary_key=True, serialize=False)),
                ('issuer_name', models.CharField(max_length=255, unique=True)),
                ('issuer_logo', models.URLField(blank=True, max_length=500, null=True)),
                ('issuer_address', models.TextField(blank=True, null=True)),
                ('issuer_type', models.CharField(blank=True, choices=[('CENTRAL_GOV', 'Central Government'), ('STATE_GOV', 'State Government'), ('PSU', 'Public Sector Undertaking'), ('SLU', 'State Level Undertaking'), ('CORPORATE', 'Corporate / Non-PSU'), ('BANK', 'Bank / NBFC'), ('MUNICIPAL', 'Municipal Bonds')], max_length=50, null=True)),
                ('issuer_state', models.CharField(blank=True, max_length=100, null=True)),
                ('issuer_website', models.URLField(blank=True, max_length=255, null=True)),
                ('issuer_logo_url', models.URLField(blank=True, max_length=500, null=True)),
                ('issuer_description', models.TextField(blank=True, null=True)),
                ('contact_person', models.CharField(blank=True, max_length=100, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=255, null=True)),
                ('fax_number', models.CharField(blank=True, max_length=50, null=True)),
                ('email_id', models.TextField(blank=True, null=True)),
                ('guaranteed_by', models.TextField(blank=True, null=True)),
                ('registrar', models.CharField(blank=True, max_length=255, null=True)),
                ('industry_group', models.CharField(blank=True, max_length=100, null=True)),
                ('macro_sector', models.CharField(blank=True, max_length=100, null=True)),
                ('micro_industry', models.CharField(blank=True, max_length=100, null=True)),
                ('product_service_activity', models.TextField(blank=True, null=True)),
                ('sector', models.CharField(blank=True, max_length=100, null=True)),
                ('security_code', models.CharField(blank=True, max_length=50, null=True)),
                ('financial_last_updated_at', models.DateField(blank=True, null=True)),
                ('data_hash', models.CharField(blank=True, max_length=64, null=True)),
                ('record_created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'company_info',
                'indexes': [models.Index(fields=['issuer_type'], name='company_inf_issuer__762ab6_idx'), models.Index(fields=['sector'], name='company_inf_sector_5b7b70_idx'), models.Index(fields=['issuer_state'], name='company_inf_issuer__7a768e_idx')],
            },
        ),
        migrations.CreateModel(
            name='DataTransformationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operation_type', models.CharField(max_length=50)),
                ('source_table', models.CharField(blank=True, max_length=100, null=True)),
                ('target_table', models.CharField(blank=True, max_length=100, null=True)),
                ('records_processed', models.IntegerField(default=0)),
                ('records_success', models.IntegerField(default=0)),
                ('records_failed', models.IntegerField(default=0)),
                ('error_details', models.TextField(blank=True, null=True)),
                ('execution_time_seconds', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('started_at', models.DateTimeField()),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(default='RUNNING', max_length=20)),
            ],
            options={
                'db_table': 'data_transformation_log',
                'indexes': [models.Index(fields=['operation_type', 'started_at'], name='data_transf_operati_e940e7_idx'), models.Index(fields=['status'], name='data_transf_status_7032f1_idx')],
            },
        ),
        migrations.CreateModel(
            name='FinancialMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('data_hash', models.CharField(blank=True, max_length=64, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='financial_metrics', to='bonds.companyinfo')),
            ],
            options={
                'db_table': 'financial_metric',
            },
        ),
        migrations.CreateModel(
            name='FinancialMetricValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('value', models.DecimalField(decimal_places=2, max_digits=18, null=True)),
                ('metric', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='bonds.financialmetric')),
            ],
            options={
                'db_table': 'financial_metric_value',
            },
        ),
        migrations.CreateModel(
            name='ISINDetailedInfo',
            fields=[
                ('isin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='detailed_info', serialize=False, to='bonds.isinbasicinfo')),
                ('allotment_date', models.DateField(blank=True, null=True)),
                ('opening_date', models.DateField(blank=True, null=True)),
                ('listing_date', models.DateField(blank=True, null=True)),
                ('bse_date_of_listing', models.DateField(blank=True, null=True)),
                ('nse_date_of_listing', models.DateField(blank=True, help_text='NSE listing date - moved from basic', null=True)),
                ('bse_scrip_code', models.CharField(blank=True, max_length=50, null=True)),
                ('nse_symbol', models.CharField(blank=True, max_length=50, null=True)),
                ('first_interest_payment_date', models.DateField(blank=True, null=True)),
                ('closing_date', models.DateField(blank=True, help_text='Issue closing date - when subscription closed', null=True)),
                ('paid_up_value_rs', models.DecimalField(blank=True, decimal_places=2, help_text='Actual amount paid up per bond', max_digits=18, null=True)),
                ('listing_exchanges', models.CharField(blank=True, max_length=255, null=True)),
                ('secondary_exchange', models.CharField(blank=True, max_length=50, null=True)),
                ('coupon_type', models.CharField(blank=True, choices=[('FIXED', 'Fixed Rate'), ('FLOATING', 'Floating Rate'), ('ZERO_COUPON', 'Zero Coupon'), ('STEP_UP', 'Step Up'), ('STEP_DOWN', 'Step Down')], max_length=100, null=True)),
                ('day_count_convention', models.CharField(blank=True, max_length=100, null=True)),
                ('compounding_frequency', models.CharField(blank=True, max_length=100, null=True)),
                ('interest_payment_dates', models.TextField(blank=True, null=True)),
                ('interest_payment_day_convention', models.CharField(blank=True, max_length=100, null=True)),
                ('payment_schedule', models.TextField(blank=True, null=True)),
                ('redemption', models.TextField(blank=True, null=True)),
                ('redemption_premium', models.CharField(blank=True, max_length=255, null=True)),
                ('redemption_payment_day_convention', models.CharField(blank=True, max_length=255, null=True)),
                ('call_option', models.BooleanField(default=False)),
                ('call_option_date', models.DateField(blank=True, null=True)),
                ('call_notification_period', models.CharField(blank=True, max_length=255, null=True)),
                ('put_option', models.BooleanField(default=False)),
                ('put_option_date', models.DateField(blank=True, null=True)),
                ('put_notification_period', models.CharField(blank=True, max_length=255, null=True)),
                ('buyback_option', models.CharField(blank=True, max_length=100, null=True)),
                ('call_notification', models.BooleanField(default=False)),
                ('security_collateral', models.TextField(blank=True, null=True)),
                ('lock_in_period', models.CharField(blank=True, max_length=100, null=True)),
                ('benefit_under_section', models.CharField(blank=True, max_length=255, null=True)),
                ('basel_compliant', models.BooleanField(default=False)),
                ('use_of_proceeds', models.TextField(blank=True, null=True)),
                ('pricing_method', models.TextField(blank=True, null=True)),
                ('market_lot', models.BigIntegerField(blank=True, null=True)),
                ('settlement_cycle', models.CharField(blank=True, max_length=100, null=True)),
                ('last_traded_price_rs', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('last_traded_date', models.DateField(blank=True, null=True)),
                ('volume_traded', models.BigIntegerField(blank=True, null=True)),
                ('value_traded_lakhs', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('number_of_trades', models.BigIntegerField(blank=True, null=True)),
                ('weighted_avg_price_rs', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('weighted_avg_yield_percent', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('current_yield_percent', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('duration_years', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('convexity', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('demat_requests_pending', models.BigIntegerField(blank=True, null=True)),
                ('services_stopped', models.BooleanField(default=False)),
                ('no_of_bonds_ncd', models.BigIntegerField(blank=True, null=True)),
                ('greenshoe_option', models.BooleanField(default=False)),
                ('oversubscription_multiple', models.DecimalField(blank=True, decimal_places=6, max_digits=18, null=True)),
                ('percentage_sold_cumulative', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('record_date_day_convention', models.CharField(blank=True, max_length=255, null=True)),
                ('reset_details', models.TextField(blank=True, null=True)),
                ('liquidation_status', models.CharField(blank=True, max_length=255, null=True)),
                ('due_for_maturity', models.IntegerField(blank=True, help_text='Days until maturity', null=True)),
                ('tenure_years', models.IntegerField(blank=True, null=True)),
                ('tenure_months', models.IntegerField(blank=True, null=True)),
                ('tenure_days', models.IntegerField(blank=True, null=True)),
                ('data_hash', models.CharField(blank=True, max_length=64, null=True)),
                ('record_created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'isin_detailed_info',
            },
        ),
        migrations.AddIndex(
            model_name='isinbasicinfo',
            index=models.Index(fields=['ytm_percent'], name='isin_basic__ytm_per_3fa3f0_idx'),
        ),
        migrations.AddIndex(
            model_name='isinbasicinfo',
            index=models.Index(fields=['coupon_rate_percent'], name='isin_basic__coupon__14d3d3_idx'),
        ),
        migrations.AddIndex(
            model_name='isinbasicinfo',
            index=models.Index(fields=['face_value_rs'], name='isin_basic__face_va_b46fa9_idx'),
        ),
        migrations.AddIndex(
            model_name='isinbasicinfo',
            index=models.Index(fields=['interest_payment_frequency'], name='isin_basic__interes_105ae7_idx'),
        ),
        migrations.AddIndex(
            model_name='isinbasicinfo',
            index=models.Index(fields=['issuer_type'], name='isin_basic__issuer__2322f6_idx'),
        ),
        migrations.AddIndex(
            model_name='isinbasicinfo',
            index=models.Index(fields=['listed_unlisted'], name='isin_basic__listed__0273b4_idx'),
        ),
        migrations.AddIndex(
            model_name='isinbasicinfo',
            index=models.Index(fields=['trading_status'], name='isin_basic__trading_ad31dc_idx'),
        ),
        migrations.AddIndex(
            model_name='isinbasicinfo',
            index=models.Index(fields=['tax_category'], name='isin_basic__tax_cat_1dabe1_idx'),
        ),
        migrations.AddIndex(
            model_name='isinbasicinfo',
            index=models.Index(fields=['secured'], name='isin_basic__secured_d7bc42_idx'),
        ),
        migrations.AddIndex(
            model_name='isinbasicinfo',
            index=models.Index(fields=['primary_exchange'], name='isin_basic__primary_93422d_idx'),
        ),
        migrations.AddIndex(
            model_name='isinbasicinfo',
            index=models.Index(fields=['series'], name='isin_basic__series_ba5bc9_idx'),
        ),
        migrations.AddIndex(
            model_name='isinbasicinfo',
            index=models.Index(fields=['maturity_date'], name='isin_basic__maturit_6a6b87_idx'),
        ),
        migrations.AddField(
            model_name='isincompanymap',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='isin_mappings', to='bonds.companyinfo'),
        ),
        migrations.AddField(
            model_name='isincompanymap',
            name='isin',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_mappings', to='bonds.isinbasicinfo'),
        ),
        migrations.AddField(
            model_name='isinrating',
            name='isin',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='bonds.isinbasicinfo'),
        ),
        migrations.AddField(
            model_name='isinrtamap',
            name='isin',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rta_mappings', to='bonds.isinbasicinfo'),
        ),
        migrations.AddField(
            model_name='keyfactor',
            name='company',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='key_factors', to='bonds.companyinfo'),
        ),
        migrations.AddField(
            model_name='ratioanalysis',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratio_analyses', to='bonds.companyinfo'),
        ),
        migrations.AddField(
            model_name='ratiovalue',
            name='ratio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='bonds.ratioanalysis'),
        ),
        migrations.AddField(
            model_name='isinrtamap',
            name='rta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='isin_mappings', to='bonds.rtainfo'),
        ),
        migrations.AddIndex(
            model_name='financialmetric',
            index=models.Index(fields=['name'], name='financial_m_name_77fc7b_idx'),
        ),
        migrations.AddIndex(
            model_name='financialmetricvalue',
            index=models.Index(fields=['year'], name='financial_m_year_ccbf42_idx'),
        ),
        migrations.AddIndex(
            model_name='isindetailedinfo',
            index=models.Index(fields=['coupon_type'], name='isin_detail_coupon__ce8278_idx'),
        ),
        migrations.AddIndex(
            model_name='isindetailedinfo',
            index=models.Index(fields=['last_traded_date'], name='isin_detail_last_tr_c173a9_idx'),
        ),
        migrations.AddIndex(
            model_name='isindetailedinfo',
            index=models.Index(fields=['basel_compliant'], name='isin_detail_basel_c_78fbc5_idx'),
        ),
        migrations.AddIndex(
            model_name='isincompanymap',
            index=models.Index(fields=['primary_company'], name='isin_compan_primary_826ef8_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='isincompanymap',
            unique_together={('isin', 'company')},
        ),
        migrations.AddIndex(
            model_name='isinrating',
            index=models.Index(fields=['credit_rating'], name='isin_rating_credit__5318f6_idx'),
        ),
        migrations.AddIndex(
            model_name='isinrating',
            index=models.Index(fields=['credit_rating', 'rating_agency'], name='isin_rating_credit__bba3c1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='isinrating',
            unique_together={('isin', 'rating_agency', 'rating_date')},
        ),
        migrations.AddIndex(
            model_name='ratioanalysis',
            index=models.Index(fields=['title'], name='ratio_analy_title_51c7c4_idx'),
        ),
        migrations.AddIndex(
            model_name='ratiovalue',
            index=models.Index(fields=['year'], name='ratio_value_year_4ca24c_idx'),
        ),
        migrations.AddIndex(
            model_name='isinrtamap',
            index=models.Index(fields=['effective_from', 'effective_to'], name='isin_rta_ma_effecti_134173_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='isinrtamap',
            unique_together={('isin', 'rta', 'effective_from')},
        ),
    ]
